<idea-plugin>
  <extensionPoints>
    <extensionPoint name="server" beanClass="com.redhat.devtools.intellij.quarkus.lsp4ij.ServerExtensionPointBean"/>
    <extensionPoint name="languageMapping" beanClass="com.redhat.devtools.intellij.quarkus.lsp4ij.LanguageMappingExtensionPointBean"/>
    <extensionPoint name="serverIconProvider" beanClass="com.redhat.devtools.intellij.quarkus.lsp4ij.ServerIconProviderExtensionPointBean"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <applicationConfigurable groupId="language"
                           id="LanguageServers"
                           provider="com.redhat.devtools.intellij.quarkus.lsp4ij.settings.LanguageServerListConfigurableProvider"/>
    <applicationService id="com.redhat.devtools.intellij.quarkus.lsp4ij.settings.UserDefinedLanguageServerSettings"
                        serviceImplementation="com.redhat.devtools.intellij.quarkus.lsp4ij.settings.UserDefinedLanguageServerSettings"/>
    <toolWindow id="Language Servers"
                anchor="bottom"
                factoryClass="com.redhat.devtools.intellij.quarkus.lsp4ij.console.LSPConsoleToolWindowFactory"
                canCloseContents="false" />
  </extensions>

  <actions resource-bundle="messages.LanguageServerBundle">
    <action id="com.redhat.devtools.intellij.lsp4ij.console.explorer.actions.RestartServerAction"
          class="com.redhat.devtools.intellij.quarkus.lsp4ij.console.explorer.actions.RestartServerAction"
          icon="AllIcons.Actions.Restart" />
    <action id="com.redhat.devtools.intellij.lsp4ij.console.explorer.actions.StopServerAction"
            class="com.redhat.devtools.intellij.quarkus.lsp4ij.console.explorer.actions.StopServerAction"
            icon="AllIcons.Actions.Suspend" />
  </actions>
  <extensions defaultExtensionNs="com.redhat.devtools.intellij.quarkus">
    <!-- Quarkus LSP -->
    <server id="quarkus"
            label="Tools for MicroProfile"
            class="com.redhat.devtools.intellij.quarkus.lsp.QuarkusServer"
            clientImpl="com.redhat.devtools.intellij.quarkus.lsp.QuarkusLanguageClient"
            serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI">
      <description><![CDATA[
        The <a href="https://github.com/eclipse/lsp4mp">MicroProfile language server</a> provides <a href="https://microprofile.io/">MicroProfile</a> support in:
        <ul>
          <li><b>Java</b> files.</li>
          <li>and <b>microprofile-config.properties</b> files.</li>
        </ul>
        This language server is extended with <a href="https://github.com/redhat-developer/quarkus-ls" >Quakus extension</a> to provide <a href="https://quarkus.io/">Quarkus</a> support in <b>application.properties</b> file.
        ]]>
      </description>
    </server>
    <languageMapping language="Properties" serverId="quarkus"/>
    <languageMapping language="JAVA" serverId="quarkus"/>
    <serverIconProvider serverId="quarkus" class="com.redhat.devtools.intellij.microprofile.lang.MicroProfileServerIconProvider" />

    <!-- Qute LSP -->
    <server id="qute"
            label="Qute support"
            class="com.redhat.devtools.intellij.qute.lsp.QuteServer"
            clientImpl="com.redhat.devtools.intellij.qute.lsp.QuteLanguageClient"
            serverInterface="com.redhat.qute.ls.api.QuteLanguageServerAPI">
      <description><![CDATA[
        The <a href="https://github.com/redhat-developer/quarkus-ls">Qute language server</a> provides <a href="https://quarkus.io/guides/qute-reference">Qute</a> support in:
        <ul>
          <li><b>Java</b> files.</li>
          <li>and <b>*.html,*.txt,*.yml,*.json</b> Qute template files.</li>
        </ul>
        ]]>
      </description>
    </server>
    <languageMapping language="Qute_" serverId="qute"/>
    <languageMapping language="JAVA" serverId="qute"/>
    <serverIconProvider serverId="qute" class="com.redhat.devtools.intellij.quarkus.lang.QuarkusServerIconProvider" />
  </extensions>
  <extensions defaultExtensionNs="com.intellij">
    <!-- Generic -->
    <applicationService serviceImplementation="com.redhat.devtools.intellij.quarkus.lsp4ij.lifecycle.LanguageServerLifecycleManager"/>
    <projectService serviceImplementation="com.redhat.devtools.intellij.quarkus.lsp4ij.LanguageServiceAccessor"/>
    <projectService serviceImplementation="com.redhat.devtools.intellij.quarkus.lsp4ij.lifecycle.LanguageServerLifecycleManager"/>
    <completion.contributor id="LSPCompletionContributor" language="any" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.completion.LSContentAssistProcessor" order="first"/>
    <inspectionToolProvider implementation="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.diagnostics.LSPInspectionToolProvider"/>
    <gotoDeclarationHandler implementation="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.navigation.LSPGotoDeclarationHandler"/>
    <highlightUsagesHandlerFactory implementation="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.highlight.LSPHighlightUsagesHandlerFactory"/>

    <!-- Quarkus -->
    <lang.documentationProvider id="LSPTextHoverProperties" language="Properties" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.hover.LSPTextHover" order="first"/>
    <externalAnnotator language="Properties"
                       implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.diagnostics.LSPDiagnosticAnnotator"/>

    <lang.documentationProvider id="LSPTextHoverJAVA" language="JAVA" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.hover.LSPTextHover" order="first"/>
    <codeInsight.inlayProvider language="JAVA" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.codelens.LSPCodelensInlayProvider"/>
    <externalAnnotator language="JAVA"
                       implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.diagnostics.LSPDiagnosticAnnotator"/>

    <!-- Qute -->
    <lang.documentationProvider id="LSPTextHoverQute" language="Qute_" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.hover.LSPTextHover" order="first"/>
    <lang.documentationProvider id="LSPTextHoverHTML" language="HTML" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.hover.LSPTextHover" order="first"/>
    <lang.documentationProvider id="LSPTextHoverYAML" language="yaml" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.hover.LSPTextHover" order="first"/>
    <lang.documentationProvider id="LSPTextHoverJSON" language="JSON" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.hover.LSPTextHover" order="first"/>
    <lang.documentationProvider id="LSPTextHoverTEXT" language="TEXT" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.hover.LSPTextHover" order="first"/>
    <codeInsight.inlayProvider language="Qute_" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.codelens.LSPCodelensInlayProvider"/>
    <codeInsight.inlayProvider language="Qute_" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.inlayhint.LSPInlayHintInlayProvider"/>
    <codeInsight.inlayProvider language="HTML" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.codelens.LSPCodelensInlayProvider"/>
    <codeInsight.inlayProvider language="HTML" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.inlayhint.LSPInlayHintInlayProvider"/>
    <codeInsight.inlayProvider language="yaml" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.codelens.LSPCodelensInlayProvider"/>
    <codeInsight.inlayProvider language="yaml" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.inlayhint.LSPInlayHintInlayProvider"/>
    <codeInsight.inlayProvider language="JSON" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.codelens.LSPCodelensInlayProvider"/>
    <codeInsight.inlayProvider language="JSON" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.inlayhint.LSPInlayHintInlayProvider"/>
    <codeInsight.inlayProvider language="TEXT" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.codelens.LSPCodelensInlayProvider"/>
    <codeInsight.inlayProvider language="TEXT" implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.inlayhint.LSPInlayHintInlayProvider"/>
    <externalAnnotator language="Qute_"
                       implementationClass="com.redhat.devtools.intellij.quarkus.lsp4ij.operations.diagnostics.LSPDiagnosticAnnotator"/>
  </extensions>

  <applicationListeners>
    <listener topic="com.intellij.openapi.project.ProjectManagerListener"
              class="com.redhat.devtools.intellij.quarkus.lsp4ij.ConnectDocumentToLanguageServerSetupParticipant" />
  </applicationListeners>

</idea-plugin>
